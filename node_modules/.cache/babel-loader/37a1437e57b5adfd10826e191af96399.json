{"ast":null,"code":"const initialState = {\n  movies: [],\n  moviesLoaded: [],\n  movieDetail: {}\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'GET_MOVIES':\n      return { ...state,\n        moviesLoaded: action.payload\n      };\n\n    case 'GET_MOVIE_DETAIL':\n      const get = state.moviesLoaded.filter(i => i.title === action.payload);\n      let movieDetail = get[0];\n      return { ...state,\n        movieDetail\n      };\n\n    case \"ADD_MOVIE_FAVORITE\":\n      return { ...state,\n        movies: state.movies.concat(action.payload)\n      };\n\n    case \"REMOVE_MOVIE_FAVORITE\":\n      const geti = state.movies.filter(i => i.title !== action.payload);\n      return { ...state,\n        movies: get\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/leandro/Documents/HENRY2/FT-M2/12-React-Redux/homework/src/reducers/index.js"],"names":["initialState","movies","moviesLoaded","movieDetail","rootReducer","state","action","type","payload","get","filter","i","title","concat","geti"],"mappings":"AAAA,MAAMA,YAAY,GAAE;AAChBC,EAAAA,MAAM,EAAE,EADQ;AAEhBC,EAAAA,YAAY,EAAE,EAFE;AAGhBC,EAAAA,WAAW,EAAE;AAHG,CAApB;;AAMA,SAASC,WAAT,CAAqBC,KAAK,GAAEL,YAA5B,EAA0CM,MAA1C,EAAiD;AAE7C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAK,YAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHH,QAAAA,YAAY,EAAEI,MAAM,CAACE;AAFlB,OAAP;;AAKJ,SAAK,kBAAL;AACI,YAAMC,GAAG,GAAEJ,KAAK,CAACH,YAAN,CAAmBQ,MAAnB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAYN,MAAM,CAACE,OAAlD,CAAX;AACA,UAAIL,WAAW,GAAEM,GAAG,CAAC,CAAD,CAApB;AACA,aAAO,EAAC,GAAGJ,KAAJ;AAAWF,QAAAA;AAAX,OAAP;;AAEJ,SAAK,oBAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHJ,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaY,MAAb,CAAoBP,MAAM,CAACE,OAA3B;AAFL,OAAP;;AAKJ,SAAK,uBAAL;AACI,YAAMM,IAAI,GAAET,KAAK,CAACJ,MAAN,CAAaS,MAAb,CAAoBC,CAAC,IAAGA,CAAC,CAACC,KAAF,KAAYN,MAAM,CAACE,OAA3C,CAAZ;AACA,aAAO,EACH,GAAGH,KADA;AAEHJ,QAAAA,MAAM,EAAEQ;AAFL,OAAP;;AAKJ;AAAS,aAAOJ,KAAP;AA1Bb;AA4BH;;AAED,eAAeD,WAAf","sourcesContent":["const initialState= {\n    movies: [],\n    moviesLoaded: [],\n    movieDetail: {}\n}\n\nfunction rootReducer(state= initialState, action){\n\n    switch (action.type){\n\n        case 'GET_MOVIES':\n            return {\n                ...state, \n                moviesLoaded: action.payload\n            }\n\n        case 'GET_MOVIE_DETAIL':\n            const get= state.moviesLoaded.filter(i => i.title === action.payload)\n            let movieDetail= get[0]\n            return {...state, movieDetail}\n\n        case \"ADD_MOVIE_FAVORITE\":\n            return {\n                ...state, \n                movies: state.movies.concat(action.payload)\n            }\n\n        case \"REMOVE_MOVIE_FAVORITE\":\n            const geti= state.movies.filter(i=> i.title !== action.payload)\n            return {\n                ...state,\n                movies: get\n            }\n\n        default: return state\n    }\n}\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}